[{"/home/rohit/Projects/StackHack-2.0/client/src/index.js":"1","/home/rohit/Projects/StackHack-2.0/client/src/App.js":"2","/home/rohit/Projects/StackHack-2.0/client/src/withTracker.js":"3","/home/rohit/Projects/StackHack-2.0/client/src/routes.js":"4","/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/index.jsx":"5","/home/rohit/Projects/StackHack-2.0/client/src/config.js":"6","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/index.jsx":"7","/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Login.jsx":"8","/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/index.jsx":"9","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/attendance.jsx":"10","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/faq.jsx":"11","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/home.jsx":"12","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/policy.jsx":"13","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/holiday.jsx":"14","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/leaveTable.jsx":"15","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/calendarHeader.jsx":"16","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/submitLeave.jsx":"17","/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/components/index.jsx":"18","/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/components/salary.jsx":"19","/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/components/password.jsx":"20","/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/components/dropdown.jsx":"21","/home/rohit/Projects/StackHack-2.0/client/src/layout/index.js":"22","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/index.jsx":"23","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/header.jsx":"24","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/drawer.jsx":"25","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/footer.jsx":"26","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/drawerMobile.jsx":"27","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/menuHR.jsx":"28","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/menuEmployee.jsx":"29","/home/rohit/Projects/StackHack-2.0/client/src/pages/HR/index.js":"30","/home/rohit/Projects/StackHack-2.0/client/src/pages/HR/home.jsx":"31"},{"size":455,"mtime":1610111088125,"results":"32","hashOfConfig":"33"},{"size":1549,"mtime":1610341942058,"results":"34","hashOfConfig":"33"},{"size":1207,"mtime":1610113776414,"results":"35","hashOfConfig":"33"},{"size":826,"mtime":1610341886449,"results":"36","hashOfConfig":"33"},{"size":3537,"mtime":1610113776414,"results":"37","hashOfConfig":"33"},{"size":67,"mtime":1610111088125,"results":"38","hashOfConfig":"33"},{"size":284,"mtime":1610340568903,"results":"39","hashOfConfig":"33"},{"size":1903,"mtime":1610111088125,"results":"40","hashOfConfig":"33"},{"size":3430,"mtime":1610111088129,"results":"41","hashOfConfig":"33"},{"size":2244,"mtime":1610115037645,"results":"42","hashOfConfig":"33"},{"size":2783,"mtime":1610113776426,"results":"43","hashOfConfig":"33"},{"size":3246,"mtime":1610116295788,"results":"44","hashOfConfig":"33"},{"size":4468,"mtime":1610115368863,"results":"45","hashOfConfig":"33"},{"size":600,"mtime":1610340568903,"results":"46","hashOfConfig":"33"},{"size":6913,"mtime":1610113776414,"results":"47","hashOfConfig":"33"},{"size":3239,"mtime":1610114944573,"results":"48","hashOfConfig":"33"},{"size":3426,"mtime":1610113776426,"results":"49","hashOfConfig":"33"},{"size":146,"mtime":1610111088129,"results":"50","hashOfConfig":"33"},{"size":376,"mtime":1610111088129,"results":"51","hashOfConfig":"33"},{"size":1930,"mtime":1610111088129,"results":"52","hashOfConfig":"33"},{"size":567,"mtime":1610111088129,"results":"53","hashOfConfig":"33"},{"size":1033,"mtime":1610341043809,"results":"54","hashOfConfig":"33"},{"size":196,"mtime":1610113776426,"results":"55","hashOfConfig":"33"},{"size":948,"mtime":1610113776426,"results":"56","hashOfConfig":"33"},{"size":590,"mtime":1610340795589,"results":"57","hashOfConfig":"33"},{"size":327,"mtime":1610113776426,"results":"58","hashOfConfig":"33"},{"size":2506,"mtime":1610340854142,"results":"59","hashOfConfig":"33"},{"size":2674,"mtime":1610341614849,"results":"60","hashOfConfig":"33"},{"size":3513,"mtime":1610340601058,"results":"61","hashOfConfig":"33"},{"size":42,"mtime":1610341707477,"results":"62","hashOfConfig":"33"},{"size":150,"mtime":1610341688433,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1pguxuk",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/rohit/Projects/StackHack-2.0/client/src/index.js",[],["134","135"],"/home/rohit/Projects/StackHack-2.0/client/src/App.js",[],"/home/rohit/Projects/StackHack-2.0/client/src/withTracker.js",[],"/home/rohit/Projects/StackHack-2.0/client/src/routes.js",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/index.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/config.js",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/index.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Login.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/index.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/attendance.jsx",["136","137"],"import React from \"react\";\nimport { Calendar, message } from \"antd\";\nimport CalendarHeader from \"./calendarHeader\";\n\nconst Attendance = () => {\n    const dateFullCellRender = value => {\n        const absentDates = [5, 7, 8, 9, 15, 18, 21, 23, 25];\n        const presentDates = [6, 10, 11, 16, 17, 29, 30];\n        var absentColor = \"#ff1744\";\n        var presentColor = \"#00e676\";\n\n        return (\n            <div\n                className=\"ant-picker-cell-inner\"\n                style={{\n                    backgroundColor: absentDates.find(\n                        item => item === value.date()\n                    )\n                        ? absentColor\n                        : presentColor,\n                    width: \"60%\",\n                    height: \"30px\",\n                    margin: \"0px auto\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    textAlign: \"center\",\n                }}\n            >\n                <div>\n                    <span style={{ fontWeight: \"bold\" }}>{value.date()}</span>\n                </div>\n            </div>\n        );\n    };\n\n    function getMonthData(value) {\n        if (value.month() === 8) {\n            return 1394;\n        }\n    }\n\n    function monthCellRender(value) {\n        const num = getMonthData(value);\n        return null;\n    }\n\n    const markAttendance = () => {\n        message.loading({\n            content: \"Marking Your Attendance....\",\n            key: \"attendance\",\n        });\n\n        setTimeout(() => {\n            message.success({\n                content: \"Attendance marked\",\n                key: \"attendance\",\n            });\n        }, 1000);\n    };\n\n    return (\n        <div style={{ maxWidth: \"80vw\", margin: \"0px auto\" }}>\n            <Calendar\n                dateFullCellRender={dateFullCellRender}\n                monthCellRender={monthCellRender}\n                fullscreen={false}\n                headerRender={props => (\n                    <CalendarHeader\n                        {...props}\n                        markAttendance={markAttendance}\n                    />\n                )}\n            />\n        </div>\n    );\n};\n\nexport default Attendance;\n","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/faq.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/home.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/policy.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/holiday.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/leaveTable.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/calendarHeader.jsx",["138"],"import React from \"react\";\nimport { Row, Col, Typography, Select, Radio, Button, Space } from \"antd\";\n\nconst CalendarHeader = ({\n    value,\n    type,\n    onChange,\n    onTypeChange,\n    markAttendance,\n}) => {\n    const start = 0;\n    const end = 12;\n    const monthOptions = [];\n\n    const current = value.clone();\n    const localeData = value.localeData();\n    const months = [];\n    for (let i = 0; i < 12; i++) {\n        current.month(i);\n        months.push(localeData.monthsShort(current));\n    }\n\n    for (let index = start; index < end; index++) {\n        monthOptions.push(\n            <Select.Option className=\"month-item\" key={`${index}`}>\n                {months[index]}\n            </Select.Option>\n        );\n    }\n    const month = value.month();\n\n    const year = value.year();\n    const options = [];\n    for (let i = year - 10; i < year + 10; i += 1) {\n        options.push(\n            <Select.Option key={i} value={i} className=\"year-item\">\n                {i}\n            </Select.Option>\n        );\n    }\n    return (\n        <div style={{ padding: 8 }}>\n            <Typography.Title level={4}>\n                Attendance: {months[month]} {String(year)}\n            </Typography.Title>\n            <Col>\n                <Row gutter={16}>\n                    <Col>\n                        <Radio.Group\n                            size=\"small\"\n                            onChange={e => onTypeChange(e.target.value)}\n                            value={type}\n                        >\n                            <Radio.Button value=\"month\">Month</Radio.Button>\n                            <Radio.Button value=\"year\">Year</Radio.Button>\n                        </Radio.Group>\n                    </Col>\n                    <Col>\n                        <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            className=\"my-year-select\"\n                            onChange={newYear => {\n                                const now = value.clone().year(newYear);\n                                onChange(now);\n                            }}\n                            value={String(year)}\n                        >\n                            {options}\n                        </Select>\n                    </Col>\n                    <Col>\n                        <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            value={String(month)}\n                            onChange={selectedMonth => {\n                                const newValue = value.clone();\n                                newValue.month(parseInt(selectedMonth, 10));\n                                onChange(newValue);\n                            }}\n                        >\n                            {monthOptions}\n                        </Select>\n                    </Col>\n                </Row>\n            </Col>\n            <Col style={{ marginTop: \"0.75rem\" }}>\n                <Button type=\"primary\" onClick={markAttendance}>\n                    Mark Today's Attendance\n                </Button>\n            </Col>\n        </div>\n    );\n};\n\nexport default CalendarHeader;\n","/home/rohit/Projects/StackHack-2.0/client/src/pages/Employee/submitLeave.jsx",["139","140","141"],"import React from \"react\";\nimport { Form, Input, Button, DatePicker, Layout } from \"antd\";\nimport moment from \"moment\";\n\nconst { RangePicker } = DatePicker;\n\nconst layout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 10\n    }\n};\n\nconst validateMessages = {\n    // eslint-disable-next-line no-template-curly-in-string\n    required: \"${label} is required!\"\n};\n\nexport default class submitLeave extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    onChange = (dates, dateStrings) => {\n        // console.log(\"From: \", dates[0], \", to: \", dates[1]);\n        // console.log(\"From: \", dateStrings[0], \", to: \", dateStrings[1]);\n    };\n    disabledDate = current => {\n        // Can not select days before today and today\n        return current && current < moment().endOf(\"day\");\n    };\n\n    onFinish = values => {\n        // console.log(values);\n        const { range, reason } = values;\n        // Date Object\n        // can convert into string\n        // decided on database fi   eld\n        const startDate = range[0]._d;\n        const endDate = range[1]._d;\n        this.props.loadModal();\n        this.props.showModal();\n        this.props.handleAdd();\n        this.props.loadModal();\n    };\n    render() {\n        return (\n            <Layout\n                style={{\n                    marginTop: \"2rem\"\n                }}\n            >\n                <Form\n                    {...layout}\n                    name=\"Leave\"\n                    onFinish={this.onFinish}\n                    style={{\n                        marginTop: \"2rem\"\n                    }}\n                    validateMessages={validateMessages}\n                >\n                    <Form.Item\n                        name={[\"range\"]}\n                        label=\"Leave Range\"\n                        wrapperCol={{ ...layout.wrapperCol }}\n                        rules={[\n                            {\n                                required: true\n                            }\n                        ]}\n                    >\n                        <RangePicker\n                            size=\"large\"\n                            disabledDate={this.disabledDate}\n                            showTime\n                            format=\"YYYY/MM/DD HH:mm:ss\"\n                            onChange={this.onChange}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name={[\"reason\"]}\n                        label=\"Reason\"\n                        rules={[\n                            {\n                                required: true\n                            }\n                        ]}\n                    >\n                        <Input.TextArea\n                            maxLength={200}\n                            showCount={true}\n                            allowClear\n                        />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                        <Button\n                            disabled={this.props.modalLoading}\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                        >\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Layout>\n        );\n    }\n}\n\n\n","/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/components/index.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/components/salary.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/components/password.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/Auth/Register/components/dropdown.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/layout/index.js",["142"],"import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Layout, Breadcrumb } from \"antd\";\n\nimport { Footer, Drawer, DrawerMobile } from \"./components\";\n\nconst MainLayout = ({ children, type }) => {\n    const { props } = children;\n    function logoutDashboard() {\n        if (localStorage.getItem(\"employeeEmail\") !== null) {\n            localStorage.removeItem(\"employeeEmail\");\n        }\n        props.history.replace(\"/\");\n    }\n\n    return (\n        <Layout style={{ minHeight: \"100vh\" }}>\n            <DrawerMobile logoutDashboard={logoutDashboard} type={type} />\n            <Layout>\n                <Drawer type={type} />\n                <Layout\n                    style={{\n                        padding: \"0 24px 24px\",\n                        minHeight: \"80vh\",\n                        marginTop: \"2rem\",\n                    }}\n                >\n                    {children}\n                </Layout>\n            </Layout>\n            <Footer />\n        </Layout>\n    );\n};\n\nexport default MainLayout;\n","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/index.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/layout/components/header.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/layout/components/drawer.jsx",["143"],"import React from \"react\";\nimport { Layout } from \"antd\";\nimport Menu from \"./menuEmployee\";\nimport MenuHR from \"./menuHR\";\n\nconst { Sider } = Layout;\n\nconst DrawerTemp = ({ type }) => {\n    return (\n        <Sider\n            className=\"sidebar\"\n            breakpoint={\"md\"}\n            theme=\"light\"\n            collapsedWidth={0}\n            trigger={null}\n        >\n            {type == 1 ? (\n                <Menu setVisible={item => item} />\n            ) : (\n                <MenuHR setVisible={item => item} />\n            )}\n        </Sider>\n    );\n};\n\nexport default DrawerTemp;\n","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/footer.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/layout/components/drawerMobile.jsx",["144"],"import React, { useState } from \"react\";\n// import { Drawer, Button } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./drawerMobile.css\";\nimport EmployeeMenu from \"./menuEmployee\";\nimport HRMenu from \"./menuHR\";\nimport { Layout, Row, Col, Typography, Button, Drawer } from \"antd\";\nconst { Header } = Layout;\nconst { Title } = Typography;\n\nconst NavBar = ({ type }) => {\n    const [visible, setVisible] = useState(false);\n    const his = useHistory();\n\n    const logoutDashboard = () => {\n        localStorage.clear();\n        his.replace(\"/\");\n    };\n\n    return (\n        <Header className=\"navbar\" style={{ padding: \"0px 1rem\" }}>\n            <Row justify=\"space-between\">\n                <Col>\n                    <Row align=\"middle\">\n                        <Button\n                            className=\"menu\"\n                            style={{\n                                backgroundColor: \"initial\",\n                                color: \"#fff\",\n                                border: \"none\",\n                                marginTop: \"0.35rem\",\n                            }}\n                            icon={<MenuOutlined />}\n                            onClick={() => setVisible(true)}\n                        />\n                        <Title\n                            style={{\n                                color: \"white\",\n                                marginTop: \"1rem\",\n                            }}\n                            level={3}\n                        >\n                            Nucleus\n                        </Title>\n                    </Row>\n                </Col>\n                <Col></Col>\n                <Col>\n                    <Button type=\"primary\" danger onClick={logoutDashboard}>\n                        Logout\n                    </Button>\n                    <Drawer\n                        title=\"Menu\"\n                        placement=\"left\"\n                        onClose={() => setVisible(false)}\n                        visible={visible}\n                        bodyStyle={{ padding: \"0px\" }}\n                    >\n                        {type == 1 ? (\n                            <EmployeeMenu setVisible={setVisible} />\n                        ) : (\n                            <HRMenu setVisible={setVisible} />\n                        )}\n                    </Drawer>\n                </Col>\n            </Row>\n        </Header>\n    );\n};\nexport default NavBar;\n","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/menuHR.jsx",["145","146","147","148","149","150"],"import React from \"react\";\nimport { Menu } from \"antd\";\nimport {\n    HomeOutlined,\n    LaptopOutlined,\n    QuestionCircleOutlined,\n    CheckOutlined,\n    FormOutlined,\n    SmileOutlined,\n    InfoCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst { SubMenu } = Menu;\n\nconst HRMenu = ({ setVisible }) => {\n    const HRRoutes = [\n        {\n            title: \"Home\",\n            path: \"home\",\n            icon: <HomeOutlined />,\n        },\n    ];\n    return (\n        <Menu\n            mode=\"inline\"\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100%\",\n                border: \"none\",\n            }}\n        >\n            {HRRoutes.map((data, index) => {\n                if (!(\"content\" in data)) {\n                    return (\n                        <Menu.Item icon={data.icon} key={data.path}>\n                            <Link\n                                style={{\n                                    textDecoration: \"none\",\n                                    color: \"inherit\",\n                                }}\n                                to={`/hr/${data.path}`}\n                                onClick={() => setVisible(false)}\n                            >\n                                {data.title}\n                            </Link>\n                        </Menu.Item>\n                    );\n                } else {\n                    return (\n                        <SubMenu\n                            key={index}\n                            icon={data.icon}\n                            title={data.title}\n                        >\n                            {data.content.map((d, i) => {\n                                return (\n                                    <Menu.Item icon={d.icon} key={d.path}>\n                                        <Link\n                                            style={{\n                                                textDecoration: \"none\",\n                                                color: \"inherit\",\n                                            }}\n                                            to={`/hr/${d.path}`}\n                                            onClick={() => setVisible(false)}\n                                        >\n                                            {d.title}\n                                        </Link>\n                                    </Menu.Item>\n                                );\n                            })}\n                        </SubMenu>\n                    );\n                }\n            })}\n        </Menu>\n    );\n};\n\nexport default HRMenu;\n","/home/rohit/Projects/StackHack-2.0/client/src/layout/components/menuEmployee.jsx",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/HR/index.js",[],"/home/rohit/Projects/StackHack-2.0/client/src/pages/HR/home.jsx",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":8,"column":15,"nodeType":"157","messageId":"158","endLine":8,"endColumn":27},{"ruleId":"155","severity":1,"message":"159","line":44,"column":15,"nodeType":"157","messageId":"158","endLine":44,"endColumn":18},{"ruleId":"155","severity":1,"message":"160","line":2,"column":55,"nodeType":"157","messageId":"158","endLine":2,"endColumn":60},{"ruleId":"155","severity":1,"message":"161","line":37,"column":24,"nodeType":"157","messageId":"158","endLine":37,"endColumn":30},{"ruleId":"155","severity":1,"message":"162","line":41,"column":15,"nodeType":"157","messageId":"158","endLine":41,"endColumn":24},{"ruleId":"155","severity":1,"message":"163","line":42,"column":15,"nodeType":"157","messageId":"158","endLine":42,"endColumn":22},{"ruleId":"155","severity":1,"message":"164","line":3,"column":18,"nodeType":"157","messageId":"158","endLine":3,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":17,"column":19,"nodeType":"167","messageId":"168","endLine":17,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":60,"column":31,"nodeType":"167","messageId":"168","endLine":60,"endColumn":33},{"ruleId":"155","severity":1,"message":"169","line":5,"column":5,"nodeType":"157","messageId":"158","endLine":5,"endColumn":19},{"ruleId":"155","severity":1,"message":"170","line":6,"column":5,"nodeType":"157","messageId":"158","endLine":6,"endColumn":27},{"ruleId":"155","severity":1,"message":"171","line":7,"column":5,"nodeType":"157","messageId":"158","endLine":7,"endColumn":18},{"ruleId":"155","severity":1,"message":"172","line":8,"column":5,"nodeType":"157","messageId":"158","endLine":8,"endColumn":17},{"ruleId":"155","severity":1,"message":"173","line":9,"column":5,"nodeType":"157","messageId":"158","endLine":9,"endColumn":18},{"ruleId":"155","severity":1,"message":"174","line":10,"column":5,"nodeType":"157","messageId":"158","endLine":10,"endColumn":23},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'presentDates' is assigned a value but never used.","Identifier","unusedVar","'num' is assigned a value but never used.","'Space' is defined but never used.","'reason' is assigned a value but never used.","'startDate' is assigned a value but never used.","'endDate' is assigned a value but never used.","'Breadcrumb' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'LaptopOutlined' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'CheckOutlined' is defined but never used.","'FormOutlined' is defined but never used.","'SmileOutlined' is defined but never used.","'InfoCircleOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]